1. 删除本地仓库： 
rm -rf .git

2. 初始化本地仓库：
git init

3. 添加文件：
git add filename.extension

4. 提交文件：
git commit -m "description for current commit"

5. 显示状态
git status

6. 查看不同
git diff filename.extension

7. 回退版本
回退至上一版本:
git reset --hard HEAD^

回退至指定版本:
git reset --hard commit_id

清除暂存区文件：
git reset HEAD 文件名

8. 显示操作记录命令 - 用于回退版本或其他操作
git reflog

9. 显示提交记录
git log [filename] 方括号内为可选参数，输入时不要带方括号

10. 换行符
# 签出时将换行符转换成CRLF，签入时转换回 LF。
git config --global core.autocrlf true
#签出时不转换换行符，签入时转换回 LF
git config --global core.autocrlf input
#签出签入均不转换
git config --global core.autocrlf false
这些选项在TorgoiseGit中也可以设置。

我的建议是在无论在什么系统下编程，都把所有人的编辑器的换行符模式设置成Unix格式，然后把autocrlf设置成false，这样一劳永逸。
毕竟除了Windows记事本这类软件外，已经很少有文本编辑器不支持换行符设置了。
-- by zengrong - https://blog.zengrong.net/post/1722.html

但是，Visual Studio 默认的的行尾符是 CRLF ， 只有保存文件时才能更改，
所以这里将所有编辑器的换行符模式都设置成 Windows 格式 CRLF ，
并且使用默认的 git config --global core.autocrlf true
-- by me

# 拒绝提交包含混合换行符的文件
git config --global core.safecrlf true
# 允许提交包含混合换行符的文件
git config --global core.safecrlf false
# 提交包含混合换行符的文件时候给出警示
git config --global core.safecrlf warn

该项默认未设置，我将期设置为 git config --global core.safecrlf true ， 拒绝提交包含混合换行符的文件

11. 中文文件名和路径乱码
要解决这个问题，只需要告诉 git 不对 0x80 以上的字符进行转义即可：
git config --global core.quotepath false
-- by zengrong

12. 文件权限问题 755 and 664

我在Cygwin下以命令行的形式使用Git，同时也使用TortoiseGit。
在使用TortoiseGit签出使用cygwin提交的项目时，发现所有的文件权限都改变了：

$ git diff
diff --git a/launch4j/spritesheet_conterver.xml b/launch4j/spritesheet_conterver.xml
old mode 100755
new mode 100644
这是因为msysgit是一个类Unix模拟器，需要拥有Unix形式的文件访问权限。而由于Windows的种种限制，信息不能复原，从而导致原来的755成644了。

解决方法：

git config --global core.filemode false
git config core.filemode false

这个选择的在TortoiseGit中没有界面来设置，只能用命令行或者手动修改git配置文件。
-- by zengrong

13. 丢弃工作区修改
git checklout -- 文件名
可以配合 'git reset HEAD 文件名' 来清除暂存区后，再丢弃工作区修改的内容
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374831943254ee90db11b13d4ba9a73b9047f4fb968d000
小结
又到了小结时间。

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

14. 删除文件
git rm 文件名
需要先删除文件后 'rm test.txt' 再使用该命令
删除本地文件后，有两种场景：
一是确实要从版本库中删除该文件，那就用命令 'git rm test.txt' 删掉，并且 'git commit -m "删除 test.txt"'
另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本： git checkout -- test.txt

15. 创建 ssh key
ssh-keygen -t rsa -C "youremail@example.com"

补充： 
直接关联github远程库可能会遇到问题，所以可能需要输入下面的命令
ssh git@github.com

引用： 
	The authenticity of host 'github.com (192.30.252.131)' can't be established.
	RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
	Are you sure you want to continue connecting (yes/no)? yes    #这里写 yes
	Warning: Permanently added 'github.com,192.30.252.131' (RSA) to the list of known hosts.
	Permission denied (publickey).

16. 关联至远程库
git remote add origin git@github.com:yourUserName/YourRepositoryName.git

17. 推送至远程库
git push -u origin master

